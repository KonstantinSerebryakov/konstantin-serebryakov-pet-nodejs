import{j as p}from"./QForm.b242c720.js";import{t as d,r as i,w as h,_ as g,v as f,x as E,y as w,z as V,aw as y,u,E as m,az as c}from"./index.a468aedf.js";import{b as v,a as S}from"./axios.b55e1699.js";const{Axios:x,AxiosError:P,CanceledError:L,isCancel:U,CancelToken:k,VERSION:z,all:O,Cancel:R,isAxiosError:T,spread:M,toFormData:B,AxiosHeaders:Z,HttpStatusCode:q,formToJSON:F,mergeConfig:G}=v,$=d({name:"EmailInput",setup(){const e=i(""),t=i(!1);h(e,(r,n)=>{t.value=!1,r.length>0&&!a()&&(t.value=!0)});const a=()=>{const r=new RegExp(/^[\w\.-]+@[\w\.-]+\.\w+$/),n=e.value.toLowerCase().trim();return r.test(n)};return{inputValue:e,isShowError:t,isValid:a,isNotEmpty:()=>e.value.length>0,getValue:()=>e.value.trim(),showError:()=>{t.value=!0}}},computed:{errorMessage(){if(!this.isShowError)return"";let e="";return this.isNotEmpty()?e="Invalid email":e="Email should not be empty",e}}});function C(e,t,a,l,s,o){return f(),E(p,{modelValue:e.inputValue,"onUpdate:modelValue":t[0]||(t[0]=r=>e.inputValue=r),label:"Email",type:"email",outlined:"","bottom-slots":"",class:"q-mt-md",error:e.isShowError},{error:w(()=>[V(y(e.errorMessage),1)]),_:1},8,["modelValue","error"])}var H=g($,[["render",C]]);const N=d({name:"EmailInput",setup(){const e=i(""),t=i(!1);h(e,(r,n)=>{t.value=!1,r.length>0&&!a()&&(t.value=!0)});const a=()=>{const r=new RegExp(/^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*#?&._-])[A-Za-z\d@$!%*#?&._-]{8,32}$/),n=e.value.toLowerCase().trim();return r.test(n)};return{inputValue:e,isShowError:t,isValid:a,isNotEmpty:()=>e.value.length>0,getValue:()=>e.value.trim(),showError:()=>{t.value=!0}}},computed:{errorMessage(){if(!this.isShowError)return"";let e="";return this.inputValue.length===0?e="Password should not be empty":this.inputValue.length<8?e="Password should be at least 8 characters":this.inputValue.match(/[A-Za-z]/)?this.inputValue.match(/[0-9]/)?this.inputValue.match(/[@$!%*#?&]/)?this.inputValue.length>32&&(e="Password should not be longer then 32 symbols"):e="Password should include at least 1 special symbol: @$!%*#?&":e="Password should include at least 1 digit":e="Password should include at least 1 letter",e}}});function A(e,t,a,l,s,o){return f(),E(p,{modelValue:e.inputValue,"onUpdate:modelValue":t[0]||(t[0]=r=>e.inputValue=r),label:"Password",type:"password",outlined:"","bottom-slots":"",class:"q-mt-md",error:e.isShowError,maxlength:32},{error:w(()=>[V(y(e.errorMessage),1)]),_:1},8,["modelValue","error"])}var j=g(N,[["render",A]]);class D{static async login(t){const a="/auth/login";this.fetchPost(a,t,l=>{const s=l.access_token,o={email:t.email,token:s};u.emit(m.LOGIN_SUCCESS,o)})}static async register(t){const a="/auth/register";this.fetchPost(a,t,l=>{const o={email:l.email};u.emit(m.LOGIN_SUCCESS,o)})}static async fetchPost(t,a,l){S.post(t,a).then(s=>{if(console.log(s),s.status===201)l(s.data);else throw new P(s.status+": "+s.data)}).catch(s=>{var o;((o=s.response)==null?void 0:o.status)===401?c.create({type:"warning",message:"user already created"}):c.create({type:"negative",message:"Fetch error: "+s.message})})}}export{D as A,H as E,j as P};
